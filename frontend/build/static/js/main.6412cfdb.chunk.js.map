{"version":3,"sources":["Components/LineChart.js","Components/Login.js","Components/Userdetail.js","Components/Tab.js","App.js","index.js"],"names":["LineChart","prop","data","labels","graphdata","weight","datasets","label","bmi","fill","backgroundColor","borderColor","console","log","className","username","href","options","scales","yAxes","ticks","beginAtZero","BmiDisplay","props","alertClass","Login","calculateBMI","bind","this","heightFeet","heightInch","height","Number","toFixed","bmiResults","results","getBMIResults","id","type","value","name","onChange","handleChange","min","max","htmlFor","React","Component","Userdetail","useState","users","setUsers","loading","setLoading","useEffect","axios","get","then","res","persons","class","scope","map","user","_id","MyTab","setData","Tabs","defaultActiveKey","Tab","eventKey","title","setdata","evt","target","onClick","put","catch","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6412cfdb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nconst LineChart = (prop) => {\r\n  const data = {\r\n    labels: [null,prop.graphdata.weight, null],\r\n    datasets: [\r\n      {\r\n        label: 'BODY MASS INDEX',\r\n        data: [null,prop.graphdata.bmi,null],\r\n        fill: false,\r\n        backgroundColor: 'rgb(255, 99, 132)',\r\n        borderColor: 'rgba(255, 99, 132, 0.2)',\r\n      },\r\n    ],\r\n  };\r\n  \r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  \r\n  console.log(prop.graphdata.weight)\r\n  console.log(prop.graphdata.bmi)\r\n return ( <>\r\n    <div className='header'>\r\n      <h1 className='title'>OBESITY GRAPH</h1>\r\n      <h3 className='title'>OBESITY GRAPH of {prop.graphdata.username}</h3>\r\n      <div className='links'>\r\n        <a\r\n          className='btn btn-gh'\r\n          href='https://github.com/reactchartjs/react-chartjs-2/blob/master/example/src/charts/Line.js'\r\n        >\r\n           Weight/Height\r\n        </a>\r\n      </div>\r\n    </div>\r\n    <Line data={data} options={options} />\r\n  </>)\r\n};\r\n\r\nexport default LineChart;","import React from \"react\";\r\nclass Login extends React.Component {\r\n  constructor(){\r\n    super();\r\n    \r\n    this.calculateBMI = this.calculateBMI.bind(this);\r\n  }\r\n\r\n \r\n\r\n  calculateBMI(){\r\n    if (this.props.data.weight && this.props.data.heightFeet && this.props.data.heightInch){\r\n      // BMI Formula = (WEIGHT[in pounds] / (HEIGHT[in inches] * HEIGHT[in inches])) * 703;\r\n      let INCHES_IN_FEET = 12;\r\n\r\n      var height = Number(this.props.data.heightFeet);\r\n          // convert feet to inches\r\n          height *= INCHES_IN_FEET;\r\n          // add the inches input field\r\n          height += Number(this.props.data.heightInch);\r\n\r\n      let weight = this.props.data.weight;\r\n\r\n      var bmi = (weight / (height * height)) * 703;\r\n          bmi = bmi.toFixed(2);\r\n        console.log(bmi)\r\n      return bmi;\r\n    }\r\n  }\r\n\r\n  getBMIResults(bmi){\r\n    let bmiResults = {\r\n      label: '',\r\n      alertClass: '',\r\n    };\r\n    \r\n    if (bmi <= 18.5){\r\n      bmiResults.label = 'Underweight';\r\n      bmiResults.alertClass = 'alert-danger';\r\n    } \r\n    else if (bmi <= 24.9) {\r\n      bmiResults.label = 'Normal weight';\r\n      bmiResults.alertClass = 'alert-success';\r\n    }\r\n    else if (bmi <= 29.9){\r\n      bmiResults.label = 'Overweight';\r\n      bmiResults.alertClass = 'alert-warning';\r\n    }\r\n    else if (bmi >= 30) {\r\n      bmiResults.label = 'Obesity';\r\n      bmiResults.alertClass = 'alert-danger';\r\n    } else {\r\n      bmiResults.label = 'BMI';\r\n      bmiResults.alertClass = 'alert-primary';\r\n    }\r\n\r\n    return bmiResults;\r\n  }\r\n\r\n  render() {\r\n    //console.log(this.props)\r\n    let bmi = this.calculateBMI();\r\n    let results = this.getBMIResults(bmi);\r\n\r\n    return (\r\n      <div className=\"App container shadow p-3 border\">\r\n        <div className=\"row \">\r\n          <div className=\"col-xs-12 \">\r\n            <h1>BMI Calculator</h1>\r\n            <p>Enter your weight and height below.</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6\">\r\n            <form>\r\n            <div className=\"form-group\">\r\n                <legend>User Name</legend>\r\n                <div className=\"row\">\r\n                  <div className=\"col-xs-12\">\r\n                    <input className=\"form-control\" id=\"bmiWeight\" type=\"text\"  value={ this.props.data.username } name=\"username\" onChange={ this.props.handleChange } />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <legend>Weight</legend>\r\n                <div className=\"row\">\r\n                  <div className=\"col-xs-12\">\r\n                    <input className=\"form-control\" id=\"bmiWeight\" type=\"number\" min=\"1\" max=\"1000\" value={ this.props.data.weight } name=\"weight\" onChange={ this.props.handleChange } />\r\n                    <label className=\"control-label\" htmlFor=\"bmiWeight\">lb</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <legend>Height</legend>\r\n                <div className=\"row\">\r\n                  <div className=\"col-xs-3 col-lg-6\">\r\n                    <input className=\"form-control\" id=\"bmiHeightFeet\" type=\"number\" min=\"1\" max=\"12\" value={ this.props.data.heightFeet } name=\"heightFeet\" onChange={ this.props.handleChange } />\r\n                    <label className=\"control-label\" htmlFor=\"bmiHeightFeet\">ft</label>\r\n                  </div>\r\n                  <div className=\"col-xs-3 col-lg-6\">\r\n                    <input className=\"form-control\" id=\"bmiHeightInch\" type=\"number\" min=\"0\" max=\"12\" value={ this.props.data.heightInch } name=\"heightInch\" onChange={ this.props.handleChange } />\r\n                    <label className=\"control-label\" htmlFor=\"bmiHeightInch\">in</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          <div className=\"col-sm-6\">\r\n            <br></br>\r\n            <BmiDisplay bmi={bmi} label={results.label} alertClass={results.alertClass} />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction BmiDisplay(props){\r\n  return (\r\n    <div className={\"bmi-result alert \" + props.alertClass}>\r\n      <div>{ props.bmi || '--.-' }</div>\r\n      <div>{ props.label }</div>\r\n    </div> \r\n  )\r\n}\r\n\r\n\r\nexport default Login;","import React, { useState ,useEffect} from 'react'\r\nimport axios  from 'axios';\r\n\r\nfunction Userdetail(props) {\r\n    const [users,setUsers]=useState()\r\n    const [loading,setLoading]=useState(false)\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8080/users/`)\r\n        .then(res => {\r\n          const persons = res.data;\r\n          console.log(res.data)\r\n          setUsers(persons)\r\n          setLoading(true)\r\n        })\r\n    }, [props.bmi])\r\n    console.log(users)\r\n    return (\r\n        <div>\r\n        {loading\r\n            ? ( \r\n                <table class=\"table table-hover\">\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n       \r\n          <th scope=\"col\">UserName</th>\r\n          <th scope=\"col\">Weight</th>\r\n          <th scope=\"col\">BMI</th>\r\n          <th scope=\"col\">Height</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {users.map((user)=>{\r\n              return ( <tr key={user._id}>\r\n                <th scope=\"row\">{user.username}</th>\r\n                <td>{user.weight}</td>\r\n                <td>{user.bmi}</td>\r\n                <td>{user.heightFeet}' {user.heightInch}''</td>\r\n              </tr>)\r\n          })}\r\n        \r\n   \r\n       \r\n      </tbody>\r\n    </table>\r\n            )\r\n            : (<p>Loading</p>)\r\n          }\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Userdetail\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Tab,Tabs } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport LineChart from './LineChart';\r\nimport Login from './Login';\r\nimport Userdetail from './Userdetail';\r\nfunction MyTab() {\r\n    const[data , setData]=useState({\r\n        heightFeet: '',\r\n        heightInch: '',\r\n        weight: '',\r\n        bmi : \"\",\r\n        username  : \"\"\r\n      })\r\n\r\n      function handleChange(evt) {\r\n        const value = evt.target.value;\r\n        setData({\r\n          ...data,\r\n          [evt.target.name]: value\r\n        });\r\n      }\r\n\r\n\r\n      function calculateBMI(){\r\n        if (data.weight && data.heightFeet && data.heightInch){\r\n          // BMI Formula = (WEIGHT[in pounds] / (HEIGHT[in inches] * HEIGHT[in inches])) * 703;\r\n          let INCHES_IN_FEET = 12;\r\n    \r\n          var height = Number(data.heightFeet);\r\n              // convert feet to inches\r\n              height *= INCHES_IN_FEET;\r\n              // add the inches input field\r\n              height += Number(data.heightInch);\r\n    \r\n          let weight = data.weight;\r\n    \r\n          var bmi = (weight / (height * height)) * 703;\r\n              bmi = bmi.toFixed(2);\r\n           setData({\r\n               ...data,bmi,\r\n           })\r\n          return bmi;\r\n        }\r\n      }\r\n\r\n      function handleSubmit(){\r\n        calculateBMI()\r\n          \r\n        axios.put(`http://localhost:8080/users/newuser`, { data })\r\n        .then(res => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n        }).catch(()=>{\r\n            console.log(\"errror\")\r\n        })\r\n      }\r\n      function handleReset(){\r\n        \r\n        setData({ heightFeet: '',\r\n        heightInch: '',\r\n        weight: '',\r\n        bmi : \"\",\r\n        username  : \"\"})  \r\n        \r\n      }\r\n    \r\n    \r\n      console.log(data)\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <br></br>\r\n            <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\r\n  <Tab eventKey=\"home\" title=\"Enter Details\">\r\n      <div className=\"container\">   <Login setdata={setData} handleChange={handleChange} data={data}/ ></div>\r\n      <br></br>\r\n      <button onClick={handleSubmit } className=\"btn btn-success\">Click to Save data</button>\r\n  <button onClick={handleReset } className=\"btn btn-secondary m-2\">Reset</button>\r\n  </Tab>\r\n  <Tab eventKey=\"profile\" title=\"Visualize\">\r\n    <LineChart graphdata={data}/>\r\n  </Tab>\r\n  <Tab eventKey=\"users\" title=\"Users Data\">\r\n    <Userdetail bmi={data.bmi}/>\r\n  </Tab>\r\n\r\n</Tabs>\r\n\r\n  \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default MyTab;\r\n","import React from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport MyTab from \"./Components/Tab\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n         \n    <MyTab/>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}